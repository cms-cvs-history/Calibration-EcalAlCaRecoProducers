#
#  run on collection of electrons to make a collection of AlCaReco electrons 
#  and store them in the output collection
#

process AlCaElectronsProduction = 
{

  #include "FWCore/MessageLogger/data/MessageLogger.cfi"

  service = MessageLogger {
     untracked vstring destinations = {"cout"}
     untracked PSet cout = {
       untracked  PSet default = { untracked int32 limit = 0 }
     }
  }


  # input module. assume root file contains EcalRecHits
  source = PoolSource 
  {
    # Number of events program should run
    untracked vstring fileNames = {
    '/store/unmerged/RelVal/2006/8/13/RelVal090Z-EE/GEN-SIM-DIGI-RECO/0005/DE55F8DE-1E2B-DB11-BF2E-0030485628C6.root'
    }
    untracked int32 maxEvents = -1
  }


  include "Calibration/EcalAlCaRecoProducers/data/alcaElectronSequence.cff"


  path p = {alcaElectronSequence}


  # output module 
  module out = PoolOutputModule
  {
     untracked string fileName = "alCaElectrons.root" 
     untracked vstring outputCommands = 
     {
       "drop  *",
       "keep *_alCaIsolatedElectrons_*_*"
     }
  }

  endpath outpath = { out }
}
